#!/bin/bash

RUN_DIR=/var/vcap/sys/run/tcp_fixer
PIDFILE=$RUN_DIR/tcp_fixer.pid

source /var/vcap/packages/common/utils.sh

case $1 in

  start)

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    echo $$ > $PIDFILE
    # TCP_FIN_TIMEOUT
    # # This setting determines the time that must elapse before TCP/IP can
    # release a closed connection and reuse
    # # its resources. During this TIME_WAIT state, reopening the connection to
    # the client costs less than establishing
    # # a new connection. By reducing the value of this entry, TCP/IP can release
    # closed connections faster, making more
    # # resources available for new connections. Addjust this in the presense of
    # many connections sitting in the
    # # TIME_WAIT state:

    echo 5 > /proc/sys/net/ipv4/tcp_fin_timeout

    # # TCP_TW_REUSE
    # # This allows reusing sockets in TIME_WAIT state for new connections when it
    # is safe from protocol viewpoint.
    # # Default value is 0 (disabled). It is generally a safer alternative to
    # tcp_tw_recycle

    echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse

    # # NF_CONNTRACK_TCP_TIMEOUT_WAIT_TIME
    sysctl net.netfilter.nf_conntrack_tcp_timeout_time_wait=<%= p('nf_conntrack_tcp_timeout_time_wait') %>

    while true; do
      sleep 10
    done

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Don't be a doofus, doofus"
    ;;

esac
