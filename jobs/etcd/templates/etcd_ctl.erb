#!/bin/bash

RUN_DIR=/var/vcap/sys/run/etcd
LOG_DIR=/var/vcap/sys/log/etcd
PIDFILE=$RUN_DIR/etcd.pid
WORK_DIR=/var/vcap/data/etcdstorage

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "etcd"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $WORK_DIR

    chown -R vcap:vcap $RUN_DIR
    chown -R vcap:vcap $LOG_DIR
    chown -R vcap:vcap $WORK_DIR

    echo $$ > $PIDFILE

    <% if_p("syslog_aggregator") do %>
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh /var/vcap/jobs/etcd/config
    <% end %>

    if [ -f $WORK_DIR/info ]; then
      rm $WORK_DIR/info
    fi

    if [ -f $WORK_DIR/conf ]; then
      rm $WORK_DIR/conf
    fi

    exec chpst -u vcap:vcap /var/vcap/packages/etcd/etcd \
        -d $WORK_DIR \
        -c "<%= spec.networks.send(properties.networks.apps).ip %>:4001" -s "<%= spec.networks.send(properties.networks.apps).ip %>:7001" \
        -n "node<%= spec.networks.send(properties.networks.apps).ip %>" \
<% if spec.networks.send(properties.networks.apps).ip != p("etcd.machines").first %>-C "<%= p("etcd.machines").first %>:7001"<% end %> \
        -snapshot \
         1>>$LOG_DIR/etcd.stdout.log \
         2>>$LOG_DIR/etcd.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: etcd_ctl {start|stop}"

    ;;

esac
